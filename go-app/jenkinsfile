pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: docker
            image: docker
            command:
            - cat
            tty: true
            volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
          volumes:
          - name: docker-socket
            hostPath:
              path: /var/run/docker.sock
        '''
    }
  }
  
  environment {
    DOCKER_REGISTRY = 'https://registry.nginx-app.info'
    DOCKER_CREDENTIALS_ID = 'DOCKER_REGISTRY_CREDENTIALS'
    GO_IMAGE_NAME = 'go-app'
    TAG = ''
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Set Docker Tag') {
      steps {
        script {
          TAG = sh(script: 'git rev-parse --short=8 HEAD', returnStdout: true).trim()
          echo "Using Docker tag: ${TAG}"
        }
      }
    }
    
    stage('Print Workspace') {
      steps {
        sh 'pwd'
        sh 'ls -la'
        sh 'cd go-app'
        sh 'ls -la'
      }
    }

    stage('Build Go Application') {
      steps {
        container('docker') {
          script {
            def dockerfilePath = "go-app/Dockerfile"
            def dockerImage = docker.build("registry.nginx-app.info/k8s/go-app:${TAG}", "-f ${dockerfilePath} .")
          }
        }
      }
    }

    stage('Push Go Application to Harbor') {
      steps {
        container('docker') {
          withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
            script {
              docker.withRegistry("https://registry.nginx-app.info", "${DOCKER_CREDENTIALS_ID}") {
                def dockerfilePath = "go-app/Dockerfile"
                docker.image("registry.nginx-app.info/k8s/go-app:${TAG}").push("-f ${dockerfilePath}")
              }
            }
          }
        }
      }
    }
  }
}