pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: docker
            image: docker
            command:
            - cat
            tty: true
            volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
          volumes:
          - name: docker-socket
            hostPath:
              path: /var/run/docker.sock
        '''
    }
  }
  
  environment {
    DOCKER_REGISTRY = 'https://registry.nginx-app.info'
    DOCKER_CREDENTIALS_ID = 'DOCKER_REGISTRY_CREDENTIALS'
    GO_IMAGE_NAME = 'go-app'
    TAG = ''
  }

  stages {
    stage('Checkout') {
      steps {
        sh '''
          git clone https://github.com/AgudaruStefan/K8s_Cluster
          cd K8s_Cluster
          git checkout efbde8b
        '''
      }
    }

    stage('Set Docker Tag') {
        steps {
            script {
                TAG = sh(script: 'git rev-parse --short=7 HEAD', returnStdout: true).trim()
                echo "Using Docker tag: ${TAG}"
            }
        }
    }
    
    stage('Print Workspace') {
      steps {
        sh 'pwd'
        sh 'ls -la'
        sh 'ls go-app'
      }
    }

    stage('Build Go Application') {
      steps {
        sh '''
          dockerfilePath="go-app/Dockerfile"
          docker build -t registry.nginx-app.info/library/go-app:${TAG} -f ${dockerfilePath} .
        '''
      }
    }

    stage('Push Go Application to Harbor') {
      steps {
        withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
          sh '''
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
            docker push registry.nginx-app.info/library/go-app:${TAG}
            docker logout
          '''
        }
      }
    }
  }
}